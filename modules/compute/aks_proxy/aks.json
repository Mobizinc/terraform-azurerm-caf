{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "resourceName": {
          "type": "string",
          "defaultValue": "aksadcluster",
          "metadata": {
              "description": "The name of the Managed Cluster resource."
          }
      },
      "location": {
          "type": "string",
          "defaultValue": "[resourceGroup().location]",
          "metadata": {
              "description": "The Azure location of the AKS resource."
          }
      },
      "dnsPrefix": {
          "type": "string",
          "defaultValue": "aksadcluster",
          "metadata": {
              "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
          }
      },
      "httpProxy": {
          "type": "string", 
          "defaultValue": "http://proxy.example.com:8080/",
          "metadata": {
            "description": "httpProxy setting ."
          }
      },
      "httpsProxy": {
          "type": "string",
          "defaultValue": "http://proxy.example.com:8080/",
          "metadata": {
            "description": "httpsProxy setting ."
          }
      },
      "vnetSubnetID": {
        "type": "string",
        "metadata": {
            "description": "Resource ID of virtual network subnet used for nodes and/or pods IP assignment."
        }
      },
      "noProxy": {
          "type": "string",
          "defaultValue": "10.0.0.0/8,localhost",
          
          "metadata": {
            "description": " NoProxy setting ."
          }
      },
      "osDiskSizeGB": {
          "defaultValue": 500,
          "minValue": 0,
          "maxValue": 1023,
          "type": "int",
          "metadata": {
              "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
          }
      },
      "agentCount": {
          "defaultValue": 1,
          "minValue": 1,
          "maxValue": 50,
          "type": "int",
          "metadata": {
              "description": "The number of agent nodes for the cluster. Production workloads have a recommended minimum of 3."
          }
      },
      "agentVMSize": {
          "defaultValue": "Standard_D2_v3",
          "type": "string",
          "metadata": {
              "description": "The size of the Virtual Machine."
          }
      },
    
      "osType": {
          "defaultValue": "Linux",
          "allowedValues": [
              "Linux"
          ],
          "type": "string",
          "metadata": {
              "description": "The type of operating system."
          }
      },
      "kubernetesVersion": {
          "defaultValue": "1.22.1",
          "type": "string",
          "metadata": {
              "description": "The version of Kubernetes."
          }
      },
      "enableHttpApplicationRouting": {
          "defaultValue": false,
          "type": "bool",
          "metadata": {
              "description": "boolean flag to turn on and off of http application routing"
          }
      },
      "networkPlugin": {
          "allowedValues": [
              "azure",
              "kubenet"
          ],
          "defaultValue": "azure",
          "type": "string",
          "metadata": {
              "description": "Network plugin used for building Kubernetes network."
          }
      },
      "enablePrivatemode": {
          "defaultValue": true,
          "type": "bool",
          "metadata": {
              "description": "boolean flag to turn on and off of RBAC"
          }
      },
      "maxPods": {
          "defaultValue": 30,
          "type": "int",
          "metadata": {
              "description": "Maximum number of pods that can run on a node."
          }
      },
      "enableRBAC": {
          "defaultValue": true,
          "type": "bool",
          "metadata": {
              "description": "boolean flag to turn on and off of RBAC"
          }
      },
      "existingVirtualNetworkName": {
          "type": "string",
          "metadata": {
            "description": "Name of an existing VNET that will contain this AKS deployment."
          }
      },
      "existingVirtualNetworkResourceGroup": {
          "type": "string",
          "metadata": {
            "description": "Name of the existing VNET resource group"
          }
      },
      "existingSubnetName": {
          "type": "string",
          "metadata": {
              "description": "Subnet name that will contain the App Service Environment"
          }
      },

      "serviceCidr": {
          "type": "string",
          "defaultValue": "10.0.0.0/16",
          "metadata": {
              "description": "A CIDR notation IP range from which to assign service cluster IPs."
          }
      },
      "dnsServiceIP": {
          "type": "string",
          "defaultValue": "10.0.0.10",
          "metadata": {
              "description": "Containers DNS server IP address."
          }
      },
      "dockerBridgeCidr": {
          "type": "string",
          "defaultValue": "172.17.0.1/16",
          "metadata": {
              "description": "A CIDR notation IP for Docker bridge."
          }
      },
      "existingSubnetRoleAssignmentName":{
          "type": "string",
          "defaultValue": "[newGuid()]",
          "metadata": {
              "description": "Name of the Role Assignment created for the Service Principal in the existing Subnet"
          }
      },
      "NetworkPolicy": {
          "type": "string",
          "defaultValue": "calico",
          "allowedValues": [
            "azure",
            "calico"
          ],
          "metadata": {
            "description": "Specifies the network policy used for building Kubernetes network. - calico or azure"
          }
        }
      
  },

  "resources": [
      {
          "type": "Microsoft.ContainerService/managedClusters",
          "name": "[parameters('resourceName')]",
          "apiVersion": "2021-03-01",

          "location": "[parameters('location')]",
           "identity": {
            "type": "SystemAssigned"
          },
          "properties": {
              "kubernetesVersion": "[parameters('kubernetesVersion')]",
              "enableRBAC": "[parameters('enableRBAC')]",
              "dnsPrefix": "[parameters('dnsPrefix')]",
             
              "addonProfiles": {
                  "httpApplicationRouting": {
                      "enabled": "[parameters('enableHttpApplicationRouting')]"
                  }
              },
              "apiServerAccessProfile": {
                  "enablePrivateCluster": "[parameters('enablePrivatemode')]"
                 
              },
              "agentPoolProfiles": [
                  {
                      "name": "agentpool",
                      "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                      "count": "[parameters('agentCount')]",
                      "vmSize": "[parameters('agentVMSize')]",
                      "osType": "[parameters('osType')]",
                      "storageProfile": "ManagedDisks",
                      "vnetSubnetID": "[parameters('vnetSubnetID')]",
                      "maxPods": "[parameters('maxPods')]",
                      "mode": "System",
                      "type": "VirtualMachineScaleSets",
                      "availabilityZones": [
                          "1",
                          "2",
                          "3"
                      ]
                  }
              ],
              "httpProxyConfig": {
                  "httpProxy": "[parameters('httpProxy')]",
                  "httpsProxy": "[parameters('httpsProxy')]",
                  "noProxy": [
                      "[parameters('NoProxy')]"
                  ]
                  
              },
               "servicePrincipalProfile": {
                   "clientId": "msi"
              },
              "networkProfile": {
                  "networkPlugin": "[parameters('networkPlugin')]",
                  "networkPolicy": "[parameters('NetworkPolicy')]",                    
                  "serviceCidr": "[parameters('serviceCidr')]",
                  "dnsServiceIP": "[parameters('dnsServiceIP')]",
                  "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
              }
          }
      },
      {
          "type": "Microsoft.Resources/deployments",
          "name": "ClusterSubnetRoleAssignmentDeployment",
          "apiVersion": "2017-05-10",
          "resourceGroup": "[parameters('existingVirtualNetworkResourceGroup')]",
          "properties": {
              "mode": "Incremental",
              "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {},
                  "variables": {},
                  "resources": [
                      {
                          "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
                          "apiVersion": "2018-09-01-preview",
                          "name": "[concat(parameters('existingVirtualNetworkName'), '/', parameters('existingSubnetName'), '/Microsoft.Authorization/', guid(resourceGroup().id, parameters('existingSubnetRoleAssignmentName')))]",
                          "properties": {
                              "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                              "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters/', parameters('resourceName')), '2020-06-01', 'Full').identity.principalId]",
                              "scope": "[parameters('vnetSubnetId')]"
                          }
                      }
                  ]
              }
          }
  
      }
  ]
  
}
